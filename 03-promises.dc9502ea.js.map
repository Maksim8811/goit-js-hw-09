{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEYC,EAAeC,SAASC,cAAe,QACvCC,EAAaF,SAASG,iBAAkB,SACxCC,EAAeJ,SAASG,iBAAkB,SAC1CE,EAAcL,SAASG,iBAAkB,SAiB/C,SAASG,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAS,SAACC,EAASC,GAEvCC,YAAW,WACHN,EAEFI,EAAQ,CAACG,SAAAT,EAASU,MAAAT,IAGlBM,EAAO,CAACE,SAAAT,EAASU,MAAAT,G,GAElBA,E,IAICU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACxBG,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAnCrElB,EAAa2B,iBAAiB,UAAU,SAACC,GACzCA,EAAGC,iBAKH,IAJA,IAAIC,EAAWC,OAAO5B,EAAW,GAAG6B,OAC9BC,EAAUF,OAAO1B,EAAa,GAAG2B,OACjCE,EAASH,OAAOzB,EAAY,GAAG0B,OAE7BG,EAAI,EAAGA,GAAKD,EAAQC,IAE1B5B,EAAc4B,EAAGL,GACjBA,GAAUG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n     \n      const submitButton = document.querySelector(`form`)\n      const delayInput = document.querySelectorAll(`input`) // delayInput[0].value\n      const stepDelInput = document.querySelectorAll(`input`) //stepDelInput[1].value\n      const amountInput = document.querySelectorAll(`input`) // amountInput[2].value\n    \n      \n      submitButton.addEventListener(\"submit\", (ev) => {\n      ev.preventDefault()\n      let firstDel = Number(delayInput[0].value) //3\n      const stepDel = Number(stepDelInput[1].value)//1000ms\n      const amount = Number(amountInput[2].value)//3\n\n      for(let i = 1; i <= amount; i++) {\n        // firstDel+=stepDel\n        createPromise(i, firstDel)\n        firstDel+=stepDel\n        \n  }\n})\n\n      function createPromise(position, delay) {\n\n        const shouldResolve = Math.random() > 0.3;\n        const promise = new Promise ((resolve, reject) => {\n          \n        setTimeout(() => {\n            if (shouldResolve) {\n              // Fulfill\n              resolve({position,delay})\n            } else {\n              // Reject\n              reject({position,delay})\n            }\n          }, delay)\n          \n        })\n     \n      promise.then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n\n/////////////////////////////////////\n\n\n\n\n\n \n  \n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$submitButton","document","querySelector","$ce04d3a99e08e73b$var$delayInput","querySelectorAll","$ce04d3a99e08e73b$var$stepDelInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","ev","preventDefault","firstDel","Number","value","stepDel","amount","i"],"version":3,"file":"03-promises.dc9502ea.js.map"}